#Google Cloud Fundamentals: Getting Started with Cloud Storage and Cloud SQL

#Objectives
-Create a Cloud Storage bucket and place an image into it.

-Create a Cloud SQL instance and configure it.

-Connect to the Cloud SQL instance from a web server.



#1. Deploy a web server VM instance
-click compute engine > VM instances

-create

-On the Create an Instance page, for Name, type bloghost

-Select the region and zone assigned by Qwiklabs.

-For Machine type, accept the default.

-For Boot disk, if the Image shown is not Debian GNU/Linux 9 (stretch), click Change and select Debian GNU/Linux 9 (stretch).

-For Firewall, click Allow HTTP traffic.

-Click Management, security, disks, networking, sole tenancy to open that section of the dialog. 

-enter the following script;

	apt-get update
	apt-get install apache2 php php-mysql -y
	service apache2 restart
-click create

#2. Create a Cloud Storage bucket using the gsutil command line

-click activate clous shell

-enter your chosen location;

	export LOCATION=US or export LOCATION=EU or export LOCATION=ASIA
Enter this command to make a bucket named after your project ID:

	gsutil mb -l $LOCATION gs://$DEVSHELL_PROJECT_ID

-Retrieve a banner image from a publicly accessible Cloud Storage location:

	gsutil cp gs://cloud-training/gcpfci/my-excellent-blog.png my-excellent-blog.png

-Copy the banner image to your newly created Cloud Storage bucket:

	gsutil cp my-excellent-blog.png gs://$DEVSHELL_PROJECT_ID/my-excellent-blog.png

-Modify the Access Control List of the object you just created so that it is readable by everyone:

	gsutil acl ch -u allUsers:R gs://$DEVSHELL_PROJECT_ID/my-excellent-blog.png

#3. create the cloud SQL instance

-In the GCP Console, on the Navigation menu (Navigation menu), click SQL.

-Click Create instance.

-For Choose a database engine, select MySQL.

-For Instance ID, type blog-db, and for Root password type a password of your choice.

-Choose a password that you remember. There's no need to obscure the password because you'll use mechanisms to connect that aren't open access to everyone.

-Set the region and zone.

-Click Create.

-Click on the name of the instance, blog-db, to open its details page.

-From the SQL instances details page, copy the Public IP address for your SQL instance to a text editor for use later in this lab.

-Users menu on the left-hand side, and click ADD USER ACCOUNT.

-For User name, type blogdbuser

-For Password, type a password of your choice. Make a note of it.

-Click Create to create the user account in the database.

-Click the Connections tab, and then click Add network.

-For Name, type web front end

-For Network, type the external IP address of your bloghost VM instance, followed by /32

-Click Done to finish defining the authorized network.

-Click Save to save the configuration change.


#4. Configure an application in a Compute Engine instance to use Cloud SQL
-click Compute Engine > VM instances.

-click SSH in the row for your VM instance bloghost.

-In your ssh session on bloghost, change your working directory to the document root of the web server:

	cd /var/www/html

-Use the nano text editor to edit a file called index.php:

	sudo nano index.php

-Paste the content below into the file:

	<html>
	<head><title>Welcome to my excellent blog</title></head>
	<body>
	<h1>Welcome to my excellent blog</h1>
	<?php
 	$dbserver = "CLOUDSQLIP";
	$dbuser = "blogdbuser";
	$dbpassword = "DBPASSWORD";
	// In a production blog, we would not store the MySQL
	// password in the document root. Instead, we would store it in a
	// configuration file elsewhere on the web server VM instance.

	$conn = new mysqli($dbserver, $dbuser, $dbpassword);

	if (mysqli_connect_error()) {
        echo ("Database connection failed: " . mysqli_connect_error());
	} else {
        echo ("Database connection succeeded.");
	}
	?>
	</body></html>

-Press Ctrl+O, and then press Enter to save your edited file.

-Press Ctrl+X to exit the nano text editor.

-Restart the web server:

	sudo service apache2 restart

-Open a new web browser tab and paste into the address bar your bloghost VM instance's external IP address followed by /index.php. 

-Return to your ssh session on bloghost. Use the nano text editor to edit index.php again.

	sudo nano index.php

-In the nano text editor, replace CLOUDSQLIP with the Cloud SQL instance Public IP address that you noted above. Leave the quotation marks around the value in place.

-In the nano text editor, replace DBPASSWORD with the Cloud SQL database password that you defined above. Leave the quotation marks around the value in place.

-Press Ctrl+O, and then press Enter to save your edited file.

-Press Ctrl+X to exit the nano text editor.

-Restart the web server:

	sudo service apache2 restart

-Return to the web browser tab in which you opened your bloghost VM instance's external IP address. When you load the page, the following message appears:

	Database connection succeeded.

#5. Configure an application in a Compute Engine instance to use a Cloud Storage object
-In the GCP Console, click Storage > Browser.

-Click on the bucket that is named after your GCP project.

-In this bucket, there is an object called 'my-excellent-blog.png'. Copy the URL behind the link icon that appears in that object's Public access column, or behind the words "Public link" if shown.

-Return to your ssh session on your bloghost VM instance.

-Enter this command to set your working directory to the document root of the web server:

	cd /var/www/html

-Use the nano text editor to edit index.php:

	sudo nano index.php

-Use the arrow keys to move the cursor to the line that contains the h1 element. Press Enter to open up a new, blank screen line, and then paste the URL you copied earlier into the line.

-Paste this HTML markup immediately before the URL:

	<img src='

-Place a closing single quotation mark and a closing angle bracket at the end of the URL:

	'>

-copy the URL shown by the Storage browser in your own Cloud Platform project.

-Press Ctrl+O, and then press Enter to save your edited file.

-Press Ctrl+X to exit the nano text editor.

-Restart the web server:

	sudo service apache2 restart

-Return to the web browser tab in which you opened your bloghost VM instance's external IP address. When you load the page, its content now includes a banner image.



